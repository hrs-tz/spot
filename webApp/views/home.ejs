<!DOCTYPE html>
<html lang="en">
<!-- head -->
<%- include('./partials/head.ejs') %>
<body>
    
    <!-- navigation -->
    <%- include('./partials/nav.ejs') %> 

    <!-- content -->

    <!-- <div id="map"></div> -->

    <!-- leaflet js -->
    <script src="https://unpkg.com/leaflet@1.8.0/dist/leaflet.js"
    integrity="sha512-BB3hKbKWOc9Ez/TAwyWxNXeoV9c1v6FIeYiBieIWkpLjauysF18NzgR1MBNBXf8/KABdlkX68nAhlwcDFLGPCQ=="
    crossorigin=""></script>

<div id="map"></div>

<script src="https://unpkg.com/leaflet@1.3.4/dist/leaflet.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/leaflet-search/3.0.2/leaflet-search.src.js" integrity="sha512-V+GL/y/SDxveIQvxnw71JKEPqV2N+RYrUlf6os3Ru31Yhnv2giUsPadRuFtgmIipiXFBc+nCGMHPUJQc6uxxOA==" crossorigin="anonymous" referrerpolicy="no-referrer"></script>

<script>

    function setMarkers(results) {
        markersLayer.remove();
        resultsLayer.clearLayers();
        results.forEach((result) => {
            data.forEach(poi => {
                console.log(poi);
                if (poi.type === result.text) {
                    const newMarker = L.marker(poi.loc);
                    newMarker.bindPopup(`${poi.title} \n ${result.text}`);
                    resultsLayer.addLayer(newMarker);
                }
            })
        });
        //map.fitBounds(resultsLayer.getBounds());
    }

    let map = L.map('map');

    let tiles = L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png')
    map.addLayer(tiles);

    map.setView([38.2462420, 21.7350847], 12);

    let marker = L.marker ([38.246242, 21.7350847]);
    marker.addTo(map);
    marker.bindPopup("<b>Πλατεία Γεωργίου</b>");

    let data = [
        {
            loc: [38.2466877, 21.7352181],
            title: "Zizu",
            type: "cafe"
        },
        {
            loc: [38.246187, 21.7352598],
            title: "Butter Batlers",
            type: "cafe"
        },
        {
            loc: [38.35775, 21.74876],
            title: "Butter Batler",
            type: "crepes"
        }
    ];

    // Create layer groups
    var markersLayer = new L.LayerGroup(); //layer contain searched elements
    var resultsLayer = L.featureGroup();

    map.addLayer(markersLayer);
    map.addLayer(resultsLayer);

    // Create array to hold potential results
    let results = [];

    // Create search control
    var controlSearch = new L.Control.Search({
    position: "topright",
    layer: markersLayer,
    propertyName: 'type',
    initial: false,
    zoom: 12,
    marker: false,
    tipAutoSubmit: false,
    // hijack buildtip function, push results to array
    buildTip: (text, loc, name) => {
        results.push({ loc, text, name });
        const tip = L.DomUtil.create("div");
        tip.innerHTML = text;
        L.DomEvent.disableClickPropagation(tip)
        .on(tip, "click", L.DomEvent.stop, controlSearch)
        .on(
            tip,
            "click",
            function (e) {
            controlSearch._input.value = text;
            controlSearch._handleAutoresize();
            controlSearch._input.focus();
            controlSearch._hideTooltip();
            controlSearch._handleSubmit();
            setMarkers(results);
            results = [];
            },
            controlSearch
        );
        return tip;
    },
    moveToLocation: results.length
        ? () => {}
        : L.Control.Search._defaultMoveToLocation
    });

map.addControl(controlSearch);

data.forEach((item) => {
const marker = new L.Marker(new L.latLng(item.loc), { title: item.title, type: item.type }); //se property searched
marker.bindPopup("title: " + item.title);
markersLayer.addLayer(marker);
});

// Grab the input element and add an event listener to it
const inputEl = document.querySelector("input.search-input");

inputEl.addEventListener("keypress", function (e) {
if (e.key === "Enter" && results.length) {
    
    markersLayer.remove();
    resultsLayer.clearLayers();
    results.forEach((result) => {
    const marker = L.marker(result.loc);
    marker.bindPopup(`${result.text}`);
    resultsLayer.addLayer(marker);
    });
    map.fitBounds(resultsLayer.getBounds());
    results = [];
}
});
</script>


    <!-- footer -->
    <%- include('./partials/footer.ejs') %>

</body>
<script src="https://cdnjs.cloudflare.com/ajax/libs/leaflet-search/3.0.2/leaflet-search.src.js" integrity="sha512-V+GL/y/SDxveIQvxnw71JKEPqV2N+RYrUlf6os3Ru31Yhnv2giUsPadRuFtgmIipiXFBc+nCGMHPUJQc6uxxOA==" crossorigin="anonymous" referrerpolicy="no-referrer"></script>

</html>



